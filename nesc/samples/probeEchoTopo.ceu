changequote(<,>)
changequote(`,´)

@include(bitmap.c);
@include(radio.m4);
@include(DS.m4);
@include(probeEcho.m4);

@define(N_NODES, 16);

C do
	typedef nx_struct {
		nx_uint16_t ack;
		u8 data[ eval(N_NODES*N_NODES/8) ];
	}	Payload;
end

@RADIO_retry(200ms, @RADIO_start);
_DBG("Radio started\n");

input int Photo_readDone;
_Payload empty, final;

_bm_clear(final.data, N_NODES*N_NODES);
_bm_clear(empty.data, N_NODES*N_NODES);

await 1s;
par/or do
	@DS_neighbours(&(final.data[_TOS_NODE_ID*N_NODES/8]), N_NODES, 100, 200ms);
with
	await 2s;
end

char[255] all;
_bm_tostr(&(final.data[_TOS_NODE_ID * N_NODES/8]), N_NODES, all);
_DBG("\n  0123456789ABCDEF\n  %s\n\n", all);

C do
    void aggr (Payload* p1, Payload *p2){
        bm_or(p1->data, p2->data, N_NODES*N_NODES);
    }
end

event void done;

par/and do
    @DS_probeEcho(_SERVER_ID, N_NODES, &(final.data[_TOS_NODE_ID * N_NODES/8]), _Payload, &empty, &final, _aggr, `
    do
        _DBG("Unecessary iteration...\n");        
    end´, done, 500ms);
with
    await done;
    if _TOS_NODE_ID == _SERVER_ID then	
        _DBG("    0123456789ABCDEF\n");
        
        loop i, 7 do
            char[255] all;
            _bm_tostr(&(final.data[i * N_NODES/8]), N_NODES, all);
            _DBG("[%d] %s\n", i, all);
        end
    end 
end

return 0;
