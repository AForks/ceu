input _error_t    Radio_startDone;
input _error_t    Radio_sendDone;
input _message_t* Radio_receive;

C do
    typedef nx_struct {
        nx_uint16_t cnt;
    } t ;
end

// radio start
loop do
    par/or do
        await 1s;
    with
        int err = _Radio_start();
        if err == _SUCCESS then
            err = await Radio_startDone;
            if err == _SUCCESS then
                break;
            end
        end
        await forever;
    end
end

par do
    loop do
        _message_t* msg = await Radio_receive;
        _t* t_recv = _Radio_getPayload(msg,0);

        // shows `cnt' for 500ms
        _Leds_set(t_recv->cnt);
        await 500ms;
        _Leds_set(0);
    end

with
    _message_t msg;
    _t* t_send = _Radio_getPayload(&msg, sizeof<_t>);
    t_send->cnt = 1;

    loop do
        await 2s;

        // radio send
        loop do
            par/or do
                await 1s;
            with
                int err = _Radio_send(_AM_BROADCAST_ADDR,&msg,sizeof<_t>);
                if err == _SUCCESS then
                    err = await Radio_sendDone;
                    if err == _SUCCESS then
                        break;
                    end
                end
            end
            await forever;
        end

        // blinks green led for 100ms
        _Leds_led1On();
        await 100ms;
        _Leds_led1Off();

        t_send->cnt = t_send->cnt + 1;
    end
end
